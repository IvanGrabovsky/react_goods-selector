{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","filter","selectedGood","clearSelectedGoods","this","length","slice","join","isGoodSelected","includes","className","setTitle","type","onClick","map","classNames","toLocaleUpperCase","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,cAAe,CAAC,QAFpB,EAgBEC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,cAAc,GAAD,mBACRD,EAAMC,eADE,CAEXE,SApBR,EAyBEE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,cAAeD,EAAMC,cAClBK,QAAO,SAAAC,GAAY,OAAIA,IAAiBJ,UA5BjD,EAgCEK,mBAAqB,WACnB,EAAKJ,SAAS,CACZH,cAAe,MAlCrB,8CAKE,WACE,OAAQQ,KAAKT,MAAMC,cAAcS,QAC/B,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,KAAKT,MAAMC,cAArB,gBACF,QACE,MAAM,GAAN,OAAUQ,KAAKT,MAAMC,cAAcU,MAAM,GAAI,GAAGC,KAAK,MAArD,gBAAkEH,KAAKT,MAAMC,cAAcU,OAAO,GAAlG,oBAZR,oBAsCE,WAAU,IAAD,OACCV,EAAkBQ,KAAKT,MAAvBC,cAEFY,EAAiB,SAACV,GACtB,OAAOF,EAAca,SAASX,IAGhC,OACE,sBAAKY,UAAU,wBAAf,UACE,oBACEA,UAAU,4CADZ,SAGIN,KAAKO,aAG6B,IAApCP,KAAKT,MAAMC,cAAcS,QACzB,wBACEO,KAAK,SACLF,UAAU,uBACVG,QAAS,WACP,EAAKd,UAAS,WACZ,EAAKI,yBALX,wBAaF,qBAAKO,UAAU,WAAf,SACGjB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,sBAEEY,UAAWK,IACT,OACA,CACE,+BAAgCP,EAAeV,GAC/C,yBAA0BU,EAAeV,KAN/C,UAUE,8BACGA,EAAKkB,sBAGR,wBACEJ,KAAK,SACLF,UAAWK,IACT,SACA,aACA,CACE,YAAaP,EAAeV,KAGhCe,QAAS,WACFL,EAAeV,IAClB,EAAKD,QAAQC,GAGXU,EAAeV,IACjB,EAAKE,WAAWF,IAftB,SAmBIF,EAAca,SAASX,GAErB,kBADA,sBAjCDA,eAtEnB,GAAyBmB,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAGX5B,c","file":"static/js/main.f43d11f7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGoods: ['Jam'],\n  };\n\n  setTitle() {\n    switch (this.state.selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${this.state.selectedGoods} is selected`;\n      default:\n        return `${this.state.selectedGoods.slice(0, -1).join(', ')} and ${this.state.selectedGoods.slice(-1)} are selected`;\n    }\n  }\n\n  addGood = (good: string) => {\n    this.setState(state => ({\n      selectedGoods: [\n        ...state.selectedGoods,\n        good,\n      ],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(state => ({\n      selectedGoods: state.selectedGoods\n        .filter(selectedGood => selectedGood !== good),\n    }));\n  };\n\n  clearSelectedGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    const isGoodSelected = (good: string): boolean => {\n      return selectedGoods.includes(good);\n    };\n\n    return (\n      <div className=\"box has-text-centered\">\n        <h1\n          className=\"subtitle has-text-centered is-size-3 mt-3\"\n        >\n          { this.setTitle() }\n        </h1>\n\n        {(this.state.selectedGoods.length !== 0) && (\n          <button\n            type=\"button\"\n            className=\"button is-responsive\"\n            onClick={() => {\n              this.setState(() => {\n                this.clearSelectedGoods();\n              });\n            }}\n          >\n            Clear List\n          </button>\n        )}\n\n        <div className=\"list box\">\n          {goodsFromServer.map(good => (\n            <div\n              key={good}\n              className={classNames(\n                'item',\n                {\n                  'has-background-grey-lighter': !isGoodSelected(good),\n                  'has-background-success': isGoodSelected(good),\n                },\n              )}\n            >\n              <div>\n                {good.toLocaleUpperCase()}\n              </div>\n\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button',\n                  'is-focused',\n                  {\n                    'is-danger': isGoodSelected(good),\n                  },\n                )}\n                onClick={() => {\n                  if (!isGoodSelected(good)) {\n                    this.addGood(good);\n                  }\n\n                  if (isGoodSelected(good)) {\n                    this.removeGood(good);\n                  }\n                }}\n              >\n                {!selectedGoods.includes(good)\n                  ? 'CLICK TO SELECT'\n                  : 'CLICK TO REMOVE'}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\nexport default App;\n"],"sourceRoot":""}